{"version":3,"sources":["vdom/createElement.js","vdom/render.js","vdom/mount.js","vdom/difference.js","components/logo.js","script.js"],"names":["createElement","tagName","attrs","children","render","renderElement","Object","element","document","entries","key","value","setAttribute","child","appendChild","node","createTextNode","mount","target","replaceWith","diffTree","zip","xs","ys","zipped","i","Math","min","push","diffAttrs","oldAttrs","newAttrs","patches","removeAttribute","patch","diffChildren","oldChildren","newChildren","forEach","_patches","slice","length","parent","childNodes","oldTree","newTree","remove","replacement","patchAttrs","diffAtrs","patchChildren","Logo","HTMLElement","shadow","attachShadow","mode","wrapper","img","src","style","textContent","customElements","define","counter","count","id","logo","App","root","getElementById"],"mappings":";AAOeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAPf,IAAMA,EAAgB,SAACC,GAAqC,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAA3BC,EAAAA,EAAAA,MAAAA,OAAQ,IAAA,EAAA,GAA0B,EAAtBC,EAAAA,EAAAA,SACrC,MAAA,CACNF,QAAAA,EACAC,MAAAA,EACAC,cAJsD,IAAA,EAAA,GAAW,IAOpDH,EAAAA,EAAAA,QAAAA,QAAAA;;ACWAI,aAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,oBAAAA,QAAAA,MAAAA,EAAAA,OAAAA,UAAAA,CAAAA,GAAAA,MAAAA,QAAAA,KAAAA,EAAAA,EAAAA,KAAAA,GAAAA,GAAAA,iBAAAA,EAAAA,OAAAA,CAAAA,IAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,EAAAA,aAAAA,MAAAA,CAAAA,EAAAA,EAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,OAAAA,CAAAA,MAAAA,GAAAA,CAAAA,MAAAA,EAAAA,MAAAA,EAAAA,OAAAA,EAAAA,SAAAA,GAAAA,MAAAA,GAAAA,EAAAA,GAAAA,MAAAA,IAAAA,UAAAA,yIAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,CAAAA,EAAAA,WAAAA,EAAAA,EAAAA,OAAAA,aAAAA,EAAAA,WAAAA,IAAAA,EAAAA,EAAAA,OAAAA,OAAAA,EAAAA,EAAAA,KAAAA,GAAAA,EAAAA,SAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,IAAAA,GAAAA,MAAAA,EAAAA,QAAAA,EAAAA,SAAAA,QAAAA,GAAAA,EAAAA,MAAAA,KAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,IAAAA,MAAAA,IAAAA,UAAAA,6IAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,GAAAA,iBAAAA,EAAAA,OAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,OAAAA,UAAAA,SAAAA,KAAAA,GAAAA,MAAAA,GAAAA,GAAAA,MAAAA,WAAAA,GAAAA,EAAAA,cAAAA,EAAAA,EAAAA,YAAAA,MAAAA,QAAAA,GAAAA,QAAAA,EAAAA,MAAAA,KAAAA,GAAAA,cAAAA,GAAAA,2CAAAA,KAAAA,GAAAA,EAAAA,EAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,QAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,oBAAAA,QAAAA,OAAAA,YAAAA,OAAAA,GAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAAA,EAAAA,GAAAA,EAAAA,OAAAA,EAAAA,IAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAAA,cAAAA,GAAAA,EAAAA,EAAAA,QAAAA,QAAAA,EAAAA,KAAAA,EAAAA,QAAAA,GAAAA,EAAAA,SAAAA,GAAAA,GAAAA,IAAAA,MAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EAAAA,QAAAA,IAAAA,GAAAA,MAAAA,EAAAA,QAAAA,EAAAA,SAAAA,QAAAA,GAAAA,EAAAA,MAAAA,GAAAA,OAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,MAAAA,QAAAA,GAAAA,OAAAA,EAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAlBf,IAAMC,EAAgB,SAAgC,GAG3BC,IAHHL,IAAAA,EAAAA,EAAAA,QAASC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,SACjCI,EAAUC,SAASR,cAAcC,GAEbK,EAAAA,EAAAA,EAAAA,OAAOG,QAAQP,GAAQ,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAtCQ,EAAsC,EAAA,GAAjCC,EAAiC,EAAA,GAChDJ,EAAQK,aAAaF,EAAKC,GAGRR,IAPkC,EAOlCA,EAAAA,EAAAA,GAPkC,IAOxB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBU,IAAAA,EAAmB,EAAA,MAC5BN,EAAQO,YAAYV,EAAOS,KARyB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAW9CN,OAAAA,GAEFH,EAAS,SAAAW,GACX,MAAgB,iBAATA,EAA0BP,SAASQ,eAAeD,GACrDV,EAAcU,IAGPX,EAAAA,EAAAA,QAAAA,QAAAA;;ACdAa,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAJf,IAAMA,EAAQ,SAACF,EAAMG,GAEbH,OADPG,EAAOC,YAAYJ,GACZA,GAEOE,EAAAA,EAAAA,QAAAA,QAAAA;;ACuFAG,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA3Ff,IAAA,EAAA,EAAA,QAAA,aA2FeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,oBAAAA,QAAAA,MAAAA,EAAAA,OAAAA,UAAAA,CAAAA,GAAAA,MAAAA,QAAAA,KAAAA,EAAAA,EAAAA,KAAAA,GAAAA,GAAAA,iBAAAA,EAAAA,OAAAA,CAAAA,IAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,EAAAA,aAAAA,MAAAA,CAAAA,EAAAA,EAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,OAAAA,CAAAA,MAAAA,GAAAA,CAAAA,MAAAA,EAAAA,MAAAA,EAAAA,OAAAA,EAAAA,SAAAA,GAAAA,MAAAA,GAAAA,EAAAA,GAAAA,MAAAA,IAAAA,UAAAA,yIAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,CAAAA,EAAAA,WAAAA,EAAAA,EAAAA,OAAAA,aAAAA,EAAAA,WAAAA,IAAAA,EAAAA,EAAAA,OAAAA,OAAAA,EAAAA,EAAAA,KAAAA,GAAAA,EAAAA,SAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,IAAAA,GAAAA,MAAAA,EAAAA,QAAAA,EAAAA,SAAAA,QAAAA,GAAAA,EAAAA,MAAAA,KAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,IAAAA,MAAAA,IAAAA,UAAAA,6IAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,GAAAA,iBAAAA,EAAAA,OAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,OAAAA,UAAAA,SAAAA,KAAAA,GAAAA,MAAAA,GAAAA,GAAAA,MAAAA,WAAAA,GAAAA,EAAAA,cAAAA,EAAAA,EAAAA,YAAAA,MAAAA,QAAAA,GAAAA,QAAAA,EAAAA,MAAAA,KAAAA,GAAAA,cAAAA,GAAAA,2CAAAA,KAAAA,GAAAA,EAAAA,EAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,QAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,oBAAAA,QAAAA,OAAAA,YAAAA,OAAAA,GAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAAA,EAAAA,GAAAA,EAAAA,OAAAA,EAAAA,IAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAAA,cAAAA,GAAAA,EAAAA,EAAAA,QAAAA,QAAAA,EAAAA,KAAAA,EAAAA,QAAAA,GAAAA,EAAAA,SAAAA,GAAAA,GAAAA,IAAAA,MAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EAAAA,QAAAA,IAAAA,GAAAA,MAAAA,EAAAA,QAAAA,EAAAA,SAAAA,QAAAA,GAAAA,EAAAA,MAAAA,GAAAA,OAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,MAAAA,QAAAA,GAAAA,OAAAA,EAzFf,IAAMC,EAAM,SAACC,EAAIC,GAEZ,IADEC,IAAAA,EAAS,GACPC,EAAI,EAAGA,EAAIC,KAAKC,IAAIL,EAAIC,GAAKE,IACpCD,EAAOI,KAAK,CAACN,EAAGG,GAAIF,EAAGE,KAEjBD,OAAAA,GAEFK,EAAY,SAACC,EAAUC,GAEFzB,IADtB0B,IAAAA,EAAU,GAD2B,EAAA,WAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAE9BtB,EAF8B,EAAA,GAEzBC,EAFyB,EAAA,GAGxCqB,EAAQJ,KAAK,SAAAb,GAELA,OADPA,EAAKH,aAAaF,EAAKC,GAChBI,KAHiBT,EAAAA,EAAAA,EAAAA,OAAOG,QAAQsB,GAAW,EAAA,EAAA,OAAA,IAAA,IAM1CrB,IAAAA,EAAAA,SAAAA,GACJA,KAAOqB,GACXC,EAAQJ,KAAK,SAAAb,GAELA,OADPA,EAAKkB,gBAAgBvB,GACdK,KAJN,IAAA,IAAML,KAAOoB,EAAPpB,EAAAA,GAQH,OAAA,SAAAK,GACaiB,IADL,EACKA,EAAAA,EAAAA,GADL,IACd,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,EACCE,EADD,EAAA,OACOnB,IAFO,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAGPA,OAAAA,IAGHoB,EAAe,SAACC,EAAaC,GAC9BL,IAAAA,EAAU,GACdI,EAAYE,QAAQ,SAACzB,EAAOY,GAC3BO,EAAQJ,KAAKR,EAASP,EAAOwB,EAAYZ,OAGtCc,IAN8C,EAM9CA,EAAW,GACIF,EAAAA,EAAAA,EAAYG,MAAMJ,EAAYK,SAPC,IAAA,IAAA,EAAA,WAOxC5B,IAAAA,EAPwC,EAAA,MAQjD0B,EAASX,KAAK,SAAAb,GAENA,OADPA,EAAKD,aAAY,EAAOD,EAAAA,SAAAA,IACjBE,KAHiD,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,IAPR,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAa3C,OAAA,SAAA2B,GACsBrB,IADZ,EACYA,EAAAA,EAAAA,EAAIW,EAASU,EAAOC,aADhC,IAChB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,IAAA,EAAA,EAAA,EAAA,MAAA,IACCT,EADD,EAAA,IAAA,EAAA,KADgB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAIGK,IAJH,EAIGA,EAAAA,EAAAA,GAJH,IAIhB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,EACCL,EADD,EAAA,OACOQ,IALS,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAOTA,OAAAA,IAIHtB,EAAW,SAACwB,EAASC,GACvB,IAACA,EACI,OAAA,SAAA9B,GACNA,EAAK+B,UAGJ,GAAkB,iBAAXF,GAAyC,iBAAXC,EACpCD,OAAAA,IAAYC,EACP,SAAA9B,GACAgC,IAAAA,GAAc,EAAOF,EAAAA,SAAAA,GAEpBE,OADPhC,EAAKI,YAAY4B,GACVA,GAID,SAAAhC,GAAQA,OAAAA,GAGd6B,GAAAA,EAAQ3C,UAAY4C,EAAQ5C,QACvB,OAAA,SAAAc,GACAgC,IAAAA,GAAc,EAAOF,EAAAA,SAAAA,GAEpBE,OADPhC,EAAKI,YAAY4B,GACVA,GAGHC,IAAAA,EAAaC,SAASL,EAAQ1C,MAAO2C,EAAQ3C,OAC7CgD,EAAgBf,EAAaS,EAAQzC,SAAU0C,EAAQ1C,UAEtD,OAAA,SAAAY,GAGCA,OAFPiC,EAAWjC,GACXmC,EAAcnC,GACPA,IAKMK,EAAAA,EAAAA,QAAAA,QAAAA;;AC/CA+B,aAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,mBAAAA,QAAAA,iBAAAA,OAAAA,SAAAA,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAA,mBAAAA,QAAAA,EAAAA,cAAAA,QAAAA,IAAAA,OAAAA,UAAAA,gBAAAA,IAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,sDAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,GAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,IAAAA,OAAAA,WAAAA,IAAAA,EAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,IAAAA,EAAAA,EAAAA,MAAAA,YAAAA,EAAAA,QAAAA,UAAAA,EAAAA,UAAAA,QAAAA,EAAAA,EAAAA,MAAAA,KAAAA,WAAAA,OAAAA,EAAAA,KAAAA,IAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,WAAAA,EAAAA,IAAAA,mBAAAA,EAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,GAAAA,QAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,EAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,mBAAAA,IAAAA,IAAAA,SAAAA,EAAAA,OAAAA,EAAAA,SAAAA,GAAAA,GAAAA,OAAAA,IAAAA,EAAAA,GAAAA,OAAAA,EAAAA,GAAAA,mBAAAA,EAAAA,MAAAA,IAAAA,UAAAA,sDAAAA,QAAAA,IAAAA,EAAAA,CAAAA,GAAAA,EAAAA,IAAAA,GAAAA,OAAAA,EAAAA,IAAAA,GAAAA,EAAAA,IAAAA,EAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,UAAAA,EAAAA,MAAAA,aAAAA,OAAAA,EAAAA,UAAAA,OAAAA,OAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,EAAAA,EAAAA,KAAAA,GAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,IAAAA,QAAAA,UAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,CAAAA,MAAAA,EAAAA,KAAAA,MAAAA,EAAAA,GAAAA,IAAAA,EAAAA,IAAAA,SAAAA,KAAAA,MAAAA,EAAAA,IAAAA,OAAAA,GAAAA,EAAAA,EAAAA,EAAAA,WAAAA,IAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAAA,GAAAA,oBAAAA,UAAAA,QAAAA,UAAAA,OAAAA,EAAAA,GAAAA,QAAAA,UAAAA,KAAAA,OAAAA,EAAAA,GAAAA,mBAAAA,MAAAA,OAAAA,EAAAA,IAAAA,OAAAA,KAAAA,UAAAA,SAAAA,KAAAA,QAAAA,UAAAA,KAAAA,GAAAA,gBAAAA,EAAAA,MAAAA,GAAAA,OAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,IAAAA,SAAAA,SAAAA,KAAAA,GAAAA,QAAAA,iBAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,gBAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,UAAAA,EAAAA,IAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,eAAAA,OAAAA,eAAAA,SAAAA,GAAAA,OAAAA,EAAAA,WAAAA,OAAAA,eAAAA,KAAAA,GAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA5CTA,IAAAA,EAAAA,SAAAA,GA4CSA,EAAAA,EA5CIC,EAAAA,cA4CJD,IAAAA,EAAAA,EAAAA,GA3CA,SAAA,IAAA,IAAA,EAAA,EAAA,KAAA,GAGTE,IAAAA,GAFJ,EAAA,EAAA,KAAA,OAEkBC,aAAa,CAACC,KAAM,SAEhCC,EAAUhD,SAASR,cAAc,OACvCwD,EAAQ5C,aAAa,QAAS,QAExB6C,IAAAA,EAAMjD,SAASR,cAAc,OACnCyD,EAAIC,IAAM,mDAEJC,IAAAA,EAAQnD,SAASR,cAAc,SAXxB,OAYb2D,EAAMC,YAAN,0gBAyBAP,EAAOvC,YAAY6C,GACnBN,EAAOvC,YAAY0C,GACnBA,EAAQ1C,YAAY2C,GAvCP,EA2CAN,OAAAA,EA5CTA,GA4CSA,EAAAA,EAAAA,QAAAA,QAAAA;;ACHf,aAzCA,IAAA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,sBAEA,EAAA,EAAA,QAAA,sBAoCA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAnCAU,eAAeC,OAAO,eAAgBX,EAAtC,SAEA,IAAMY,EAAU,SAAAC,GAAS,OAAA,EAAc,EAAA,SAAA,MAAO,CAC7C9D,MAAO,CACN+D,GAAI,UACUD,aAAAA,GAEf7D,SAAU,CACe6D,wBAAAA,OAAAA,EADf,SAKLE,EAAO,WAAM,OAAA,EAAc,EAAA,SAAA,eAAgB,CAChDhE,MAAO,CACN+D,GAAI,mBAKFE,GAAM,EAAOD,EAAAA,SAAAA,KAEbE,GAAO,EAAMD,EAAAA,SAAAA,EAAK3D,SAAS6D,eAAe","file":"script.a05cf10d.js","sourceRoot":"../src","sourcesContent":["const createElement = (tagName, {attrs = {}, children = []}={}) => {\n\treturn {\n\t\ttagName,\n\t\tattrs,\n\t\tchildren\n\t}\n}\nexport default createElement","const renderElement = ({tagName, attrs, children}) => {\n\tconst element = document.createElement(tagName)\n\n\tfor(const [key, value] of Object.entries(attrs)) {\n\t\telement.setAttribute(key, value)\n\t}\n\t\n\tfor(const child of children) {\n\t\telement.appendChild(render(child))\n\t}\n\n\treturn element\n}\nconst render = node => {\n\tif(typeof node === 'string') return document.createTextNode(node)\n\treturn renderElement(node)\n}\n\nexport default render","const mount = (node, target) => {\n\ttarget.replaceWith(node)\n\treturn node\n}\nexport default mount","import render from './render'\n\nconst zip = (xs, ys) => {\n\tconst zipped = []\n\tfor(let i = 0; i < Math.min(xs, ys); i++) {\n\t\tzipped.push([xs[i], ys[i]])\n\t}\n\treturn zipped\n}\nconst diffAttrs = (oldAttrs, newAttrs) => {\n\tlet patches = []\n\tfor(const [key, value] of Object.entries(newAttrs)) {\n\t\tpatches.push(node => {\n\t\t\tnode.setAttribute(key, value)\n\t\t\treturn node\n\t\t})\n\t}\n\tfor(const key in oldAttrs) {\n\t\tif(!(key in newAttrs)) {\n\t\t\tpatches.push(node => {\n\t\t\t\tnode.removeAttribute(key)\n\t\t\t\treturn node\n\t\t\t})\n\t\t}\n\t}\n\treturn node => {\n\t\tfor(const patch of patches) \n\t\t\tpatch(node)\n\t\treturn node\n\t}\n}\nconst diffChildren = (oldChildren, newChildren) => {\n\tlet patches = []\n\toldChildren.forEach((child, i) => {\n\t\tpatches.push(diffTree(child, newChildren[i]))\n\t})\n\t\n\tlet _patches = []\n\tfor(const child of newChildren.slice(oldChildren.length)) {\n\t\t_patches.push(node => {\n\t\t\tnode.appendChild(render(child))\n\t\t\treturn node\n\t\t})\n\t}\n\treturn parent => {\n\t\tfor(const [patch, child] of zip(patches, parent.childNodes)) \n\t\t\tpatch(child)\n\t\t\n\t\tfor(const patch of _patches) \n\t\t\tpatch(parent)\n\t\t\n\t\treturn parent\n\t}\n}\n\nconst diffTree = (oldTree, newTree) => {\n\tif(!newTree) {\n\t\treturn node => {\n\t\t\tnode.remove()\n\t\t}\n\t}\n\tif(typeof oldTree == 'string' || typeof newTree == 'string') {\n\t\tif(oldTree !== newTree) {\n\t\t\treturn node => {\n\t\t\t\tconst replacement = render(newTree)\n\t\t\t\tnode.replaceWith(replacement)\n\t\t\t\treturn replacement\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn node => node\n\t\t}\n\t}\n\tif(oldTree.tagName !== newTree.tagName) {\n\t\treturn node => {\n\t\t\tconst replacement = render(newTree)\n\t\t\tnode.replaceWith(replacement)\n\t\t\treturn replacement\n\t\t}\n\t}\n\tconst patchAttrs = diffAtrs(oldTree.attrs, newTree.attrs)\n\tconst patchChildren = diffChildren(oldTree.children, newTree.children)\n\n\treturn node => {\n\t\tpatchAttrs(node)\n\t\tpatchChildren(node)\n\t\treturn node\n\t}\n}\n\n\nexport default diffTree","class Logo extends HTMLElement {\n\tconstructor() {\n\t\tsuper()\n\t\t\n\t\tlet shadow = this.attachShadow({mode: 'open'})\n\n\t\tconst wrapper = document.createElement('div')\n\t\twrapper.setAttribute('class', 'logo')\n\n\t\tconst img = document.createElement('img')\n\t\timg.src = 'https://randomassets.adcharity.repl.co/V_DOM.png'\n\n\t\tconst style = document.createElement('style')\n\t\tstyle.textContent = \n\t\t`\t\n\t\t\t.logo {\n\t\t\t\theight: 100vh;\n\t\t\t\twidth: 100%;\n\t\t\t\tpadding: 0;\n\t\t\t\tmargin: 0;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t}\n\t\t\t.logo > img {\n\t\t\t\theight: 13em;\n\t\t\t\twidth: 13em;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tcursor: pointer;\n\t\t\t\tbox-shadow: 0 0 0.5em silver;\n\t\t\t\ttransition: transform 0.3s ease;\n\t\t\t}\n\t\t\t.logo > img:hover {\n\t\t\t\ttransform: scale(1.1);\n\t\t\t}\n\t\t`\n\n\t\tshadow.appendChild(style)\n\t\tshadow.appendChild(wrapper)\n\t\twrapper.appendChild(img)\n\t}\n}\n\nexport default Logo","import createElement from './vdom/createElement' \nimport render from './vdom/render'\nimport mount from './vdom/mount'\nimport diffTree from './vdom/difference'\n\nimport Logo from './components/logo'\ncustomElements.define('amazing-logo', Logo)\n\nconst counter = count => createElement('div', {\n\tattrs: {\n\t\tid: 'counter',\n\t\t'data-count': count\n\t},\n\tchildren: [\n\t\t`The current count is ${count}.`\n\t]\n})\n\nconst logo = () => createElement('amazing-logo', {\n\tattrs: {\n\t\tid: 'amazing-logo'\n\t}\n})\n\n\nlet App = render(logo())\n\nlet root = mount(App, document.getElementById('root'))\n\n\n// let count = 0\n// const vApp = render(counter(count))\n// let root = mount(vApp, document.getElementById('root'))\n\n// setInterval(() => {\n\t// count ++\n\t// let newApp = counter(count)\n\t// const patch = diffTree(vApp, newApp)\n\n\t// root = patch(root)\n\t// vApp = newApp\n// }, 1000)"]}